/* eslint-disable max-len */
import Row from "../components/Row"
import Group from "../components/Group"
import Page from "../components/Page"
import Wallpaper from "./Wallpaper"

import icons from "../../../lib/icons"
import options from "../../../options"

const {
	autotheme: at,
	font,
	theme,
	bar: b,
	launcher: l,
	overview: ov,
	powermenu: pm,
	hyprland: h,
} = options

const {
	dark,
	light,
	blur,
	blurOnLight,
	scheme,
	padding,
	spacing,
	radius,
	shadows,
	widget,
	border,
} = theme

export default [
	Page("Theme", icons.ui.themes,
		Group("Theme",
			Wallpaper(),
			Row({ opt: at, title: "Auto Generate Color Scheme" }),
			Row({ opt: scheme, title: "Color Scheme", type: "enum", enums: ["dark", "light"] }),
		),
		Group("Dark Colors",
			Row({ opt: dark.bg, title: "Background", type: "color" }),
			Row({ opt: dark.fg, title: "Foreground", type: "color" }),
			Row({ opt: dark.primary.bg, title: "Primary", type: "color" }),
			Row({ opt: dark.primary.fg, title: "On Primary", type: "color" }),
			Row({ opt: dark.error.bg, title: "Error", type: "color" }),
			Row({ opt: dark.error.fg, title: "On Error", type: "color" }),
			Row({ opt: dark.widget, title: "Widget", type: "color" }),
			Row({ opt: dark.border, title: "Border", type: "color" }),
		),
		Group("Light Colors",
			Row({ opt: light.bg, title: "Background", type: "color" }),
			Row({ opt: light.fg, title: "Foreground", type: "color" }),
			Row({ opt: light.primary.bg, title: "Primary", type: "color" }),
			Row({ opt: light.primary.fg, title: "On Primary", type: "color" }),
			Row({ opt: light.error.bg, title: "Error", type: "color" }),
			Row({ opt: light.error.fg, title: "On Error", type: "color" }),
			Row({ opt: light.widget, title: "Widget", type: "color" }),
			Row({ opt: light.border, title: "Border", type: "color" }),
		),
		Group("Theme",
			Row({ opt: shadows, title: "Shadows" }),
			Row({ opt: blurOnLight, title: "Enable blur on light theme", type: "boolean" }),
			Row({ opt: blur, title: "Blur", note: "0 to disable", max: 70 }),
			Row({ opt: widget.opacity, title: "Widget Opacity", max: 100 }),
			Row({ opt: border.opacity, title: "Border Opacity", max: 100 }),
			Row({ opt: border.width, title: "Border Width", max: 100 }),
		),
		Group("UI",
			Row({ opt: padding, title: "Padding" }),
			Row({ opt: spacing, title: "Spacing" }),
			Row({ opt: radius, title: "Roundness" }),
			Row({ opt: font.size, title: "Font Size" }),
			Row({ opt: font.name, title: "Font Name", type: "font" }),
		),
	),
	Page("Bar", icons.ui.toolbars,
		Group("General",
			Row({ opt: b.transparent, title: "Transparent Bar", note: "Works best on minimalist wallpapers" }),
			Row({ opt: b.position, title: "Position", type: "enum", enums: ["top", "bottom"] }),
			Row({ opt: b.corners, title: "Corners" }),
		),
		Group("Launcher",
			Row({ opt: b.launcher.icon.icon, title: "Icon" }),
		),
		Group("Workspaces",
			Row({ opt: b.workspaces.count, title: "Number of Workspaces", note: "0 to make it dynamic" }),
		),
		Group("Taskbar",
			Row({ opt: b.taskbar.exclusive, title: "Exclusive to workspaces" }),
		),
		Group("Date",
			Row({ opt: b.date.format, title: "Date Format" }),
		),
		Group("Media",
			Row({ opt: b.media.preferred, title: "Preferred Player" }),
		),
	),
	Page("General", icons.ui.settings,
		Group("Hyprland",
			Row({ opt: h.inactiveBorder, type: "color", title: "Inactive Border Color" }),
		),
		Group("Launcher",
			Row({ opt: l.apps.max, title: "Max Items" }),
		),
		Group("Overview",
			Row({ opt: ov.scale, title: "Scale", max: 100 }),
			Row({ opt: ov.workspaces, title: "Workspaces", max: 11, note: "set this to 0 to make it dynamic" }),
		),
		Group("Powermenu",
			Row({ opt: pm.layout, title: "Layout", type: "enum", enums: ["box", "line"] }),
			Row({ opt: pm.labels, title: "Show Labels" }),
		),
	),
] as const

